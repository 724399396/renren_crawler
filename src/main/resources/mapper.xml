<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ren-ren_crawler.mapper">
    <insert id="saveUser" parameterType="User">
        INSERT INTO users
        VALUES(null,#{nickName},#{birth},#{whereFrom},#{entryYear},#{home},#{albumHome},#{avatarAlbum},#{uid},false)
    </insert>

    <select id="allUidListCache" resultType="Long">
        SELECT DISTINCT uid FROM users;
    </select>

    <select id="isUserExist" parameterType="User" resultType="Int">
        SELECT id FROM users
        WHERE uid = #{uid}
    </select>

    <select id="allNotFetchUsers" resultType="User">
        SELECT id,nickName,whereFrom,birth,avatarAlbum FROM users WHERE isFetch = FALSE
    </select>

    <select id="notFetchUsersByBirth" parameterType="Int" resultType="User">
        SELECT id,nickName,whereFrom,birth,avatarAlbum FROM users WHERE isFetch = FALSE AND birth=#{birth}
    </select>

    <update id="changeUserIsFetch" parameterType="User">
        UPDATE users SET isFetch = TRUE
        WHERE id = #{id}
    </update>

    <select id="allNotHaveEntryYearUsers" resultType="User">
        SELECT id,nickName,birth,uid FROM users where entryYear = 0
    </select>

    <update id="fixUserEntryYear" parameterType="User">
        UPDATE users SET entryYear=#{entryYear}
        WHERE id = #{id}
    </update>

    <insert id="savePhoto" parameterType="Photo">
        INSERT INTO photos
        VALUES(null,#{nickName},#{age},#{whereFrom},#{avatarUrl},#{hashId},false)
    </insert>
    
    <select id="isPhotoExist" parameterType="Photo" resultType="String">
        SELECT avatarUrl FROM photos
        WHERE hashId = #{hashId}
    </select>

    <select id="allNotSavePhotos" resultType="Photo">
        SELECT id,nickName,age,avatarUrl FROM photos WHERE isFetch = FALSE
    </select>

    <select id="getPhotoById" parameterType="Int" resultType="Photo">
        SELECT id,age,whereFrom FROM photos WHERE id=#{id}
    </select>

    <select id="notSavePhotosByAge" resultType="Photo">
        SELECT id,nickName,age,avatarUrl FROM photos WHERE age = #{age} AND isFetch = FALSE
    </select>

    <select id="hasSavedPhotoNumByAge" parameterType="Int" resultType="Int">
        SELECT Count(id) FROM photos WHERE age = #{age} AND isFetch = TRUE
    </select>

    <update id="changePhotoIsFetch" parameterType="Photo">
        UPDATE photos SET isFetch = TRUE
        WHERE id = #{id}
    </update>

</mapper>